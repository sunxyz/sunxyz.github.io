<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sunxyz.cn/"/>
  <updated>2018-06-22T08:18:02.983Z</updated>
  <id>http://sunxyz.cn/</id>
  
  <author>
    <name>yangrd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>docker 命令</title>
    <link href="http://sunxyz.cn/2018/06/22/docker-command/"/>
    <id>http://sunxyz.cn/2018/06/22/docker-command/</id>
    <published>2018-06-22T02:22:39.000Z</published>
    <updated>2018-06-22T08:18:02.983Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker-命令"><a href="#docker-命令" class="headerlink" title="docker 命令"></a>docker 命令</h2><h4 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h4><blockquote><p>docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]</p></blockquote><h4 id="展示镜像"><a href="#展示镜像" class="headerlink" title="展示镜像"></a>展示镜像</h4><blockquote><p>docker images -a</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images --format &apos;table &#123;&#123;.ID&#125;&#125; \t &#123;&#123;.Repository&#125;&#125;&apos;</span><br></pre></td></tr></table></figure><h4 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h4><blockquote><p>docker rmi [OPTIONS] IMAGE [IMAGE…]</p></blockquote><h3 id="利用-commit-理解镜像构成"><a href="#利用-commit-理解镜像构成" class="headerlink" title="利用 commit 理解镜像构成"></a>利用 commit 理解镜像构成</h3><p>尽量不要用</p><blockquote><p>docker commit [选项] &lt;容器ID或容器名&gt; [&lt;仓库名&gt;[:&lt;标签&gt;]]</p></blockquote><h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><p>配合 Dockefile 文件使用</p><blockquote><p>docker build [OPTIONS] PATH | URL | -</p></blockquote><h4 id="运行一个镜像"><a href="#运行一个镜像" class="headerlink" title="运行一个镜像"></a>运行一个镜像</h4><blockquote><p>docker run [OPTIONS] IMAGE [COMMAND] [ARG…]</p></blockquote><p>demo</p><p>nginx</p><blockquote><p>docker run –name webserver -d -p 80:80 nginx</p></blockquote><p>ubuntu</p><blockquote><p>docker run -it –rm  ubuntu:16.04  bash</p></blockquote><h4 id="容器相关"><a href="#容器相关" class="headerlink" title="容器相关"></a>容器相关</h4><p>查看运行的容器</p><blockquote><p>docker ps [OPTIONS]</p></blockquote><p>停止容器</p><blockquote><p>docker stop [OPTIONS] CONTAINER [CONTAINER…]</p></blockquote><p>启动一个已存在的容器</p><blockquote><p>docker start [OPTIONS] CONTAINER [CONTAINER…]</p></blockquote><p>删除一个容器</p><blockquote><p>docker rm [OPTIONS] CONTAINER [CONTAINER…]</p></blockquote><p>进入容器</p><blockquote><p>docker attach [OPTIONS] CONTAINER</p></blockquote><blockquote><p>docker exec [OPTIONS] CONTAINER COMMAND [ARG…]</p></blockquote><p>一个例子</p><blockquote><p>docker exec -it 6e6b bash</p></blockquote><h4 id="镜像导入导出"><a href="#镜像导入导出" class="headerlink" title="镜像导入导出"></a>镜像导入导出</h4><p>demo</p><blockquote><p>docker export 7691a814370e &gt; ubuntu.tar</p></blockquote><blockquote><p>cat ubuntu.tar | docker import - test/ubuntu:v1.0</p></blockquote><h4 id="私有仓库"><a href="#私有仓库" class="headerlink" title="私有仓库"></a>私有仓库</h4><h5 id="1创建私有仓库"><a href="#1创建私有仓库" class="headerlink" title="1创建私有仓库"></a>1创建私有仓库</h5><p>这将使用官方的 registry 镜像来启动私有仓库。默认情况下，仓库会被创建在容器的 /var/lib/registry 目录下。你可以通过 -v 参数来将镜像文件存放在本地的指定路径。例如下面的例子将上传的镜像放到本地的 /opt/data/registry 目录</p><blockquote><p>$ docker run -d \<br>    -p 5000:5000 \<br>    -v /opt/data/registry:/var/lib/registry \<br>    registry</p></blockquote><p>创建好私有仓库之后，就可以使用 docker tag 来标记一个镜像，然后推送它到仓库。例如私有仓库地址为 127.0.0.1:5000。<br>使用 docker tag 将 ubuntu:latest 这个镜像标记为 127.0.0.1:5000/ubuntu:latest。</p><p>格式为 </p><blockquote><p>docker tag IMAGE[:TAG] [REGISTRY_HOST[:REGISTRY_PORT]/]REPOSITORY[:TAG]</p></blockquote><p>demo</p><h5 id="2使用-docker-tag-来标记一个镜像，然后推送它到仓库"><a href="#2使用-docker-tag-来标记一个镜像，然后推送它到仓库" class="headerlink" title="2使用 docker tag 来标记一个镜像，然后推送它到仓库:"></a>2使用 docker tag 来标记一个镜像，然后推送它到仓库:</h5><blockquote><p>docker tag ubuntu:latest 127.0.0.1:5000/ubuntu:latest</p></blockquote><h5 id="3使用-docker-push-上传标记的镜像："><a href="#3使用-docker-push-上传标记的镜像：" class="headerlink" title="3使用 docker push 上传标记的镜像："></a>3使用 docker push 上传标记的镜像：</h5><blockquote><p>docker push 127.0.0.1:5000/ubuntu:latest</p></blockquote><p>用 curl 查看仓库中的镜像</p><blockquote><p>curl 127.0.0.1:5000/v2/_catalog</p></blockquote><h5 id="4拉取镜像："><a href="#4拉取镜像：" class="headerlink" title="4拉取镜像："></a>4拉取镜像：</h5><blockquote><p>docker pull 127.0.0.1:5000/ubuntu:latest</p></blockquote><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h4 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h4><p>数据卷 是一个可供一个或多个容器使用的特殊目录，它绕过 UFS，可以提供很多有用的特性：</p><p>数据卷 可以在容器之间共享和重用</p><p>对 数据卷 的修改会立马生效</p><p>对 数据卷 的更新，不会影响镜像</p><p>数据卷 默认会一直存在，即使容器被删除</p><p>注意：数据卷 的使用，类似于 Linux 下对目录或文件进行 mount，镜像中的被指定为挂载点的目录中的文件会隐藏掉，能显示看的是挂载的 数据卷。</p><p>Docker 新用户应该选择 –mount 参数，经验丰富的 Docker 使用者对 -v 或者 –volume 已经很熟悉了，但是推荐使用 –mount 参数。</p><h4 id="使用网络"><a href="#使用网络" class="headerlink" title="使用网络"></a>使用网络</h4><h4 id="Compose"><a href="#Compose" class="headerlink" title="Compose"></a>Compose</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;docker-命令&quot;&gt;&lt;a href=&quot;#docker-命令&quot; class=&quot;headerlink&quot; title=&quot;docker 命令&quot;&gt;&lt;/a&gt;docker 命令&lt;/h2&gt;&lt;h4 id=&quot;拉取&quot;&gt;&lt;a href=&quot;#拉取&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="docker" scheme="http://sunxyz.cn/categories/docker/"/>
    
    
      <category term="docker" scheme="http://sunxyz.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>hexo 入坑经验</title>
    <link href="http://sunxyz.cn/2017/12/01/hexo%20%E5%85%A5%E5%9D%91%E7%BB%8F%E9%AA%8C/"/>
    <id>http://sunxyz.cn/2017/12/01/hexo 入坑经验/</id>
    <published>2017-12-01T09:30:29.000Z</published>
    <updated>2018-04-08T08:52:06.442Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo是什么？"><a href="#hexo是什么？" class="headerlink" title="hexo是什么？"></a>hexo是什么？</h2><p>官网是这样介绍的：</p><blockquote><p>Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds.</p></blockquote><p>翻译一下：</p><blockquote><p>Hexo是一个快速，简单而强大的博客框架。 您可以使用Markdown（或其他语言）编写文章，Hexo可以在几秒钟内生成具有美丽主题的静态文件。</p></blockquote><p>大白话：</p><blockquote><p>将Markdown编写的文章生成漂亮的静态网站 ， 加上github page就完美了</p></blockquote><h2 id="如何安装hexo"><a href="#如何安装hexo" class="headerlink" title="如何安装hexo:"></a>如何安装hexo:</h2><p><a href="/2017/11/28/hexo+github/">hexo+github 搭建个人博客 简明教程</a></p><h2 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作:"></a>开始写作:</h2><p>我使用的是马克飞象的客户端</p><p>在写文章正文之前需要添加Meta信息：<br>Hexo默认的文件头只有title、date、tags属性，生成的html会缺少Meta信息，不利于搜索引擎收录。建议自行在文件头中添加keywords和description属性。categories属性可自行选择是否添加。<br>文件头格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: ##文章标题</span><br><span class="line">date: ##时间，格式为 YYYY-MM-DD HH:mm:ss</span><br><span class="line">categories: ##分类</span><br><span class="line">tags: ##标签，多标签格式为 [tag1,tag2,...]</span><br><span class="line">keywords: ##文章关键词，多关键词格式为 keyword1,keywords2,...</span><br><span class="line">description: ##文章描述</span><br><span class="line">---</span><br><span class="line">正文</span><br></pre></td></tr></table></figure><h2 id="预览效果"><a href="#预览效果" class="headerlink" title="预览效果:"></a>预览效果:</h2><p>使用如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></p><p>然后打开 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可</p><h2 id="如何发布页面："><a href="#如何发布页面：" class="headerlink" title="如何发布页面："></a>如何发布页面：</h2><p>起初的时候是使用 hexo 的 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>后来发现总是覆盖掉线上已有的文件 于是果断使用git GUI 来解决这个问题 现在变成了三步走：</p><ul><li><p>使用 hexo命令来生成静态页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure></li><li><p>将 生成的页面复制到git项目中去</p></li><li>使用git GUI 进行推送<br>选中修改与新增文件 stage changed=&gt; commit =&gt; push</li></ul><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择:"></a>主题选择:</h2><p>一个开源项目最重要的要素是什么?</p><p>我的答案是: 以我选择的主题为例 <a href="https://blog.viosey.com/" target="_blank" rel="noopener">示例</a>+<a href="https://material.viosey.com/docs/#/" target="_blank" rel="noopener">文档</a> 文档 文档 （逃）</p><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">获得更多主题</a></p><h2 id="扩展阅读："><a href="#扩展阅读：" class="headerlink" title="扩展阅读："></a>扩展阅读：</h2><p><a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">了解Markdown 的常用语法</a></p><p><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/0.html" target="_blank" rel="noopener">Markdown + Gitbook</a></p><p><a href="http://www.jianshu.com/p/189fd945f38f" target="_blank" rel="noopener">搭建个人博客-hexo+github详细完整步骤</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo是什么？&quot;&gt;&lt;a href=&quot;#hexo是什么？&quot; class=&quot;headerlink&quot; title=&quot;hexo是什么？&quot;&gt;&lt;/a&gt;hexo是什么？&lt;/h2&gt;&lt;p&gt;官网是这样介绍的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hexo is a fast, 
      
    
    </summary>
    
      <category term="hexo" scheme="http://sunxyz.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://sunxyz.cn/tags/hexo/"/>
    
      <category term="node" scheme="http://sunxyz.cn/tags/node/"/>
    
      <category term="github" scheme="http://sunxyz.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github 搭建个人博客 简明教程</title>
    <link href="http://sunxyz.cn/2017/11/28/hexo+github/"/>
    <id>http://sunxyz.cn/2017/11/28/hexo+github/</id>
    <published>2017-11-28T02:30:29.000Z</published>
    <updated>2018-04-08T08:52:18.743Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开始hexo之旅</span><br></pre></td></tr></table></figure><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p><strong>下载安装Git</strong><br><a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">下载地址</a></p><p><strong>下载安装node.js</strong><br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载地址</a></p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>1、利用 npm 命令即可安装。在任意位置点击鼠标右键，选择Git Bash</p><p>2、输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>更新hexo到最新版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update hexo -g</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ul><li><p><strong>创建文件夹</strong><br>（我的是在E盘创建的Hexo）</p></li><li><p><strong>初始化</strong><br>在Hexo文件下，右键运行Git Bash，输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p><strong>下载主题</strong><br>我们在官方网站提供的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题市场</a>中挑选一个喜欢的主题，<br>以 Hacker 主题为例 然后在hexo\themes文件夹下  Git Bash 输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/CodeDaraW/Hacker</span><br></pre></td></tr></table></figure></li><li><p><strong>更换主题</strong><br>找到hexo_config.yml, 进行一些常用的基础配置<br>此处修改 theme: Hacker  （主题名称对应themes文件夹下的文件夹名称）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo #博客名称</span><br><span class="line">subtitle: #短标题</span><br><span class="line">description: #描述</span><br><span class="line">author: John Doe #作者</span><br><span class="line">language: #语言</span><br><span class="line">timezone: #时区</span><br><span class="line">..</span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">Themes: Hacker</span><br></pre></td></tr></table></figure></li><li><p><strong>本地效果预览</strong><br>在浏览器访问之前：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a><br>输入 如下命令：这里有更多<a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="noopener">hexo常用命令</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p><strong>开始创造</strong></p><blockquote><p>在Hexo\source_posts文件下，新建.md文件即可</p></blockquote></li></ul><h2 id="部署到Github上"><a href="#部署到Github上" class="headerlink" title="部署到Github上"></a>部署到Github上</h2><ul><li><p><strong>申请Github账号</strong>，（注意别忘了进行账号邮箱验证）</p></li><li><p><strong>new repository</strong><br>格式: 用户名.github.io<br>以我的github账号为例 sunxyz.github.io</p></li><li><p><strong>在_config.yml进行配置</strong></p><blockquote><p>   deploy:</p><pre><code>type: gitrepo: https://github.com/sunxyz/sunxyz.github.io</code></pre></blockquote></li><li><p><strong>安装hexo-deployer-git自动部署发布工具</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git  --save</span><br></pre></td></tr></table></figure></li><li><p><strong>发布到Github</strong><br>输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li></ul><ul><li><strong>测试访问</strong><br>在浏览器输入：<a href="https://sunxyz.github.io/" target="_blank" rel="noopener">https://sunxyz.github.io/</a></li></ul><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><ul><li><p><strong>购买域名</strong><br>在万网购买一个域名即可</p></li><li><p><strong>添加域名解析</strong><br>以万网为例 添加一个记录类型为CNAME类型的的解析记录 主机记录填写www记录值填YOUR-GITHUB-USERNAME.github.io。（以本网站为例 sunxyz.github.io）一般情况下等待10分钟之后即可访问了，我们可以继续往下进行</p></li><li><p><strong>创建CNAME文件</strong><br>在github仓库中创建一个CNAME文件里面写上刚才购买的域名即可 以我的网站为例</p><blockquote><p>   <a href="http://www.sunxyz.cn" target="_blank" rel="noopener">www.sunxyz.cn</a></p></blockquote></li></ul><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><ul><li><p><strong>参考资料</strong><br><a href="http://www.jianshu.com/p/189fd945f38f" target="_blank" rel="noopener">搭建个人博客-hexo+github详细完整步骤</a><br><a href="http://blog.csdn.net/zhugeyangyang1994/article/details/78647088" target="_blank" rel="noopener">利用Github Page 搭建个人博客网站</a></p></li><li><p><strong>学习资料</strong><br><a href="http://www.jianshu.com/p/ce2571f77a9b" target="_blank" rel="noopener">通过GitHub Pages创建个人主页</a><br><a href="http://blog.csdn.net/kong_gu_you_lan/article/details/53788378" target="_blank" rel="noopener">使用GitHub打造你的个人主页</a><br><a href="http://www.jianshu.com/p/7c4e285bc05d" target="_blank" rel="noopener">Github Pages 建立个人博客总结</a><br><a href="http://www.jianshu.com/p/e68fba58f75c" target="_blank" rel="noopener">利用 GitHub Pages 快速搭建个人博客</a><br><a href="https://yanyinhong.github.io/2017/05/01/How-to-build-blog-with-hexo-and-github/" target="_blank" rel="noopener">Hexo博客搭建之使用Hexo+GitHub搭建个人博客</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="hexo" scheme="http://sunxyz.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://sunxyz.cn/tags/hexo/"/>
    
      <category term="node" scheme="http://sunxyz.cn/tags/node/"/>
    
      <category term="github" scheme="http://sunxyz.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>愿与君常伴</title>
    <link href="http://sunxyz.cn/2016/04/10/%E6%84%BF%E4%B8%8E%E5%90%9B%E5%B8%B8%E4%BC%B4/"/>
    <id>http://sunxyz.cn/2016/04/10/愿与君常伴/</id>
    <published>2016-04-10T08:36:36.000Z</published>
    <updated>2018-04-08T08:51:25.422Z</updated>
    
    <content type="html"><![CDATA[<p>如果 我是太阳</p><p>我愿黑夜的月亮也能传达我对你的陪伴</p><p>如果 我是棵草</p><p>我愿所有的绿意都点缀你的尚好年华</p><p>如果 我是条路</p><p>我愿为你准备转角的美丽与成长</p><p>如果 我是双鞋</p><p>我愿为你抵挡所有的坎坷</p><p>如果 我是眼睛</p><p>我愿陪你共度一生浮华</p><p>如果 你是君</p><p>我愿与君常伴</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果 我是太阳&lt;/p&gt;
&lt;p&gt;我愿黑夜的月亮也能传达我对你的陪伴&lt;/p&gt;
&lt;p&gt;如果 我是棵草&lt;/p&gt;
&lt;p&gt;我愿所有的绿意都点缀你的尚好年华&lt;/p&gt;
&lt;p&gt;如果 我是条路&lt;/p&gt;
&lt;p&gt;我愿为你准备转角的美丽与成长&lt;/p&gt;
&lt;p&gt;如果 我是双鞋&lt;/p&gt;
&lt;p&gt;我愿为你抵挡
      
    
    </summary>
    
      <category term="诗" scheme="http://sunxyz.cn/categories/%E8%AF%97/"/>
    
    
      <category term="诗" scheme="http://sunxyz.cn/tags/%E8%AF%97/"/>
    
  </entry>
  
</feed>
